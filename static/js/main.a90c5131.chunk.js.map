{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","img/image.png"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","dynamicURL","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDataDaily","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","barChar","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","coronaimage","alt","image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a90c5131.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react'\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nconst Cards = ({data : {confirmed,deaths,recovered,lastUpdate}}) => {\n    if(!confirmed){\n        return 'No data';\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.Card, styles.infected)} >\n                <CardContent>\n                    <Typography color=\"textSecondary\" gutterBottom> Infected  </Typography>\n                    <Typography variant=\"h5\"> \n                         <CountUp  start={0} end={confirmed.value} duration={2.5} separator=\",\" />\n                    </Typography>\n                    <Typography color=\"textSecondary\"> {new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n\n                </CardContent>\n            </Grid>\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.Card, styles.recovered)} >\n                <CardContent>\n                    <Typography color=\"textSecondary\" gutterBottom> Recovered  </Typography>\n                    <Typography variant=\"h5\"> \n                        <CountUp  start={0} end={recovered.value} duration={2.5} separator=\",\" />\n                    </Typography>           \n                    <Typography color=\"textSecondary\"> {new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography variant=\"body2\">Number of recovered cases of COVID-19</Typography>\n                </CardContent>\n            </Grid>\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.Card, styles.deaths)} >\n                <CardContent>\n                    <Typography color=\"textSecondary\" gutterBottom> Deaths  </Typography>\n                    <Typography variant=\"h5\"> \n                        <CountUp  start={0} end={deaths.value} duration={2.5} separator=\",\" />\n                    </Typography>\n                    <Typography color=\"textSecondary\"> {new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography variant=\"body2\">Number of Deaths cause by COVID-19</Typography>\n                </CardContent>\n            </Grid>\n            </Grid>\n            \n        </div>\n    )\n}\nexport default Cards;\n\n","import axios from 'axios';\n\nconst url= 'https://covid19.mathdro.id/api';\nexport const fetchData = async(country) =>{\n\n    let dynamicURL=url;\n    if (country){\n        dynamicURL=`${url}/countries/${country}`;\n\n    }\n     try {\n         const {data: {confirmed,deaths,recovered,lastUpdate}} =await axios.get(dynamicURL);\n         return{ confirmed, deaths, recovered, lastUpdate };\n     }catch(error){\n        console.log(error);\n\n     } \n    }\n\n    export const fetchDailyData= async() => {\n        try {\n            const {data}= await axios.get(`${url}/daily`);\n            const modifiedData= data.map(( dailyData)=> ({\n                confirmed:dailyData.confirmed.total,\n                deaths: dailyData.deaths.total,\n                date: dailyData.reportDate,\n            })); \n            return modifiedData;\n        }catch(error){\nconsole.log(error);\n        } \n    }\n\nexport const fetchCountries= async () =>{\n        try {\n            const {data: {countries}}=await axios.get(`${url}/countries`);\nreturn countries.map((country)=> country.name);\n        } catch (error) {\n            console.log(error);\n\n        }\n    } ","import React,{useState, useEffect} from 'react';\nimport {fetchDailyData} from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\nimport styles from './Charts.module.css';\nconst Charts = ({data:{confirmed,recovered, deaths} ,country}) => {\n    const[dailyData, setDataDaily]= useState([]);\n    \n    useEffect(()=> {\n        const fetchAPI= async () => {\n            setDataDaily(await fetchDailyData());\n        }\n        fetchAPI();\n    },[dailyData]);\n\n    const lineChart= (\n       dailyData.length\n       ? ( <Line \n        data={{\n            labels:dailyData.map(({date})=>date), \n            datasets: [{\n                data: dailyData.map(({confirmed})=>confirmed ),\n                label: 'Infected',\n                borderColor:'#3333ff',\n                fill: true\n            },{\n                data: dailyData.map(({deaths})=>deaths ),\n                label: 'Deaths',\n                borderColor:'red',\n                borderColor:'rgba(255,0,0,0.5',\n\n                fill: true\n            }]\n        }}\n        /> ) :null\n\n    );\n    const barChar=(\n        confirmed\n        ?(<Bar \n            data={{\n                labels:['Infected', 'Recovered', 'Deaths'],\n                datasets: [{\n                    label: 'People',\n                    backgroundColor:[\n                    'rgba(0, 0, 255, 0.5)',\n                    'rgba(0, 255, 0, 0.5)',\n                    'rgba(0, 0, 0, 0.5)'],\n                    data: [confirmed.value, recovered.value, deaths.value]\n                }]\n\n            }}\n            options={{\n                legend : {display:false},\n                title : {display: true, text:`Current state in ${country}`},\n            }}\n        />):null\n    );\n\n    return (\n        <div className={styles.container}>\n            {country ? barChar : lineChart}\n            \n        </div>\n    )\n}\nexport default Charts;\n\n","import React,{useState, useEffect} from 'react';\nimport {NativeSelect, FormControl} from '@material-ui/core';\nimport  styles from './CountryPicker.module.css';\nimport {fetchCountries} from '../../api';\nconst CountryPicker = ({handleCountryChange }) => {\n const [fetchedCountries,setFetchCountries]=useState([]);\nuseEffect(() => {\nconst fetchAPI= async() =>{\n    setFetchCountries(await fetchCountries());\n}\nfetchAPI();\n},[setFetchCountries]);\n\nconsole.log(fetchedCountries);\n    \n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e)=> handleCountryChange(e.target.value)}>\n                <option value=\"\"> Country</option>\n                {fetchedCountries.map((country,i)=> \n               <option key={i} value={country}>{country}</option> )}\n            </NativeSelect>\n        </FormControl>\n    )\n}\nexport default CountryPicker;\n\n","import React from 'react';\nimport {Cards,Charts,CountryPicker} from './components';\n\n\nimport styles from './App.module.css';\nimport {fetchData} from './api';\n\n import coronaimage from './img/image.png';\nclass App extends React.Component{\nstate ={\n    data:{},\n    country:'',\n}\n    async componentDidMount(){\n        const fetchedData=await fetchData();\nthis.setState({data:fetchedData}) \n   }\n   handleCountryChange= async (country)=>{\n    const fetchedData=await fetchData(country);\n\nthis.setState({data: fetchedData, country: country});\n   }\n    render(){\n        const {data,country}= this.state;\n        return (\n            <div className={styles.container}>\n                <img src={coronaimage} alt=\"COVID-19\" className={styles.image}/>\n                <Cards data={data}/>\n                <CountryPicker  handleCountryChange= {this.handleCountryChange}/>\n                <Charts data={data} country={country}/>\n\n            </div>\n        )\n    }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App/> , document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1mZfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}